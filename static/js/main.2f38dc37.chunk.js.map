{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"m08IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eACD,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,WCNCC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBF,EAAsBE,EAAtBF,KAAMD,EAAgBG,EAAhBH,MAAOI,EAASD,EAATC,KAErB,OACE,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCG,IAEtC,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYC,GAFlB,SAIGA,OAIL,qBAAKF,UAAU,oBAAf,SACGM,QChBIC,G,MAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OAAwB,IAApBA,EAASC,OAET,qCACE,uBACA,mBAAG,UAAQ,oBAAX,gCAKCD,EAASE,KAAI,SAAAL,GAAO,OACzB,qBAAKL,UAAU,cAAf,SACE,cAAC,EAAD,CAAaK,QAASA,GAAcA,EAAQM,WCXrCC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOR,EAAyBO,EAAzBP,KAAMP,EAAmBc,EAAnBd,KAAMS,EAAaK,EAAbL,SAE3B,OACE,sBAAKR,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCc,IACjC,cAAC,EAAD,CAAUf,KAAMA,OAGlB,mBAAGC,UAAU,iBAAb,SACGM,IAEH,cAAC,EAAD,CAAaE,SAAUA,QCfhBO,EAAW,SAAC,GAAD,SAAGC,MACnBN,KAAI,SAAAG,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,Q,qBCW7B,IAAMK,EAAQC,EAAgBP,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cd,MAVmBmB,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKY,KAAOO,MAUhDV,UAPuBa,EAOGR,EAAKF,GANxBW,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAAyBA,EAJJH,KAcRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QCpBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2f38dc37.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => {\n  if (comments.length === 0) {\n    return (\n      <>\n        <hr />\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    );\n  }\n\n  return comments.map(comment => (\n    <div className=\"CommentList\">\n      <CommentInfo comment={comment} key={comment.id} />\n    </div>\n  ));\n};\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n        <UserInfo user={user} />\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  posts.map(post => (\n    <PostInfo post={post} key={post.id} />\n  ))\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}